generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id               String          @id @default(uuid())
  firstname        String
  lastname         String
  email            String          @unique
  username         String          @unique
  password         String
  status           String         @default("OFFLINE")
  createdAt        DateTime        @default(now())
  Movies           UserMovieList[] 
  chats            Chat[]
  room             Room?         @relation("UserRoom")
  friend           Friendship[]  @relation("MyFriendships")
  friendships      Friendship[]  @relation("FriendOf")
}


model Friendship {
  id  Int           @id @default(autoincrement())
  user User         @relation(fields: [userId], references: [id], name:"MyFriendships")
  userId  String  
  friend  User      @relation(fields: [friendId], references: [id], name:"FriendOf")
  friendId String   
  @@unique([userId, friendId])
}

 
model Room {
  id    String    @id @default(uuid())
  playing String  @default("")
  user  User      @relation(fields: [userId], references: [id],name:"UserRoom")
  userId String   @unique
}


 model Chat {
  id   Int    @id  @default(autoincrement()) 
  name String
  time String
  createdAt DateTime @default(now())
  message String
  userId  String
  user    User  @relation(fields: [userId], references:[id])
 }

model UserMovieList {
  id         String       @id @default(uuid())
  user       User      @relation(fields: [userId], references: [id])
  movie      Movie     @relation(fields: [movieId], references: [id])
  userId     String
  movieId    String
  listType   String  

  @@unique([userId, movieId, listType]) 
}

model Movie {
  id         String             @id @default(uuid())
  title      String
  year       String          
  imdbID     String             @unique
  type       String          
  poster     String          

  userLists  UserMovieList[] 
}



